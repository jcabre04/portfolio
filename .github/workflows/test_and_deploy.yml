name: Test and Deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python Environment
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run Tests
      run: |
        export MY_NEW_VARDATABASE_URL="sqlite:///:memory:"
        rm -rf migrations
        flask db init
        flask db migrate
        flask db upgrade
        python -m pytest

  deploy:
    # Only run this job if "build" has ended successfully
    needs:
      - test

    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python Environment
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    # Elastic Beanstalk CLI version
    - name: Get EB CLI version
      run: |
        python -m pip install --upgrade pip
        pip install awsebcli --upgrade
        eb --version

    # Configure AWS Credentials
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2

    # Create the Elastic Beanstalk application
    - name: Create EBS application
      run: |
        eb init -p python-3.8 portfolio --region us-west-2

    # Deploy to (or Create) the Elastic Beanstalk environment
    - name: Create portfolio environment & deploy
      run: |
        (eb use portfolio-env && eb status portfolio-env && eb deploy) || eb create portfolio-env --envvars FLASK_APP=run.py
